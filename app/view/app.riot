app
  h2 create
  form(onsubmit='{ sub }')
    input(type='text' name='title' placeholder='todo')
    input(type='submit' value='create')
  h2 tasks
  ul
    li(each='{ item, index in list }' if='{ !item.deleted }')
      input(type='checkbox' onchange='{ chk }' checked='{ item.checked }')
      span(class='{ strike: item.checked }')
        | { index }. { item.title }
      reveal(text='edit' alt='x' item='{ item }')
        form(onsubmit='{ parent.rename }').ib
          input(type='text' name='rename' value='{ opts.item.title }')
          input(type='submit' value='edit')
      button(onclick='{ parent.del }')
        | delete
  h2 deleted
  ul
    li(each='{ item, index  in archive }')
      span(class='{ strike: item.checked }')
        | { index }. { item.title }
      button(onclick='{ restore }')
        | restore

  script.
    let ui = this;
    let db = opts.db.get('list');
    ui.list = [];
    db.convert(ui.list);
    ui.archive = [];
    ui.sub = sub;
    ui.chk = chk;
    ui.del = del;
    ui.rename = rename;
    ui.restore = restore;

    ui.on('mount', arc('deleted'));

    function arc(type) {
      ui.archive = ui.list.filter(by(type));
    }

    function by(type) {
      return function(obj) {
        if(obj[type] && obj[type] === true) {
          return obj;
        }
      }
    }

    function sub(ev) {
      ev.preventDefault();
      let target = ev.target.title;
      db.set({ title: target.value });
      target.value = '';
      arc('deleted');
    }

    function chk(ev) {
      alter(ev.item.item, { checked: ev.target.checked });
    }

    function del(ev) {
      alter(ev.item.item, { deleted: true });
      arc('deleted');
    }

    function log(ev) {
      console.log(ev, new Date(), ui.list);
    }

    function rename(ev) {
      ev.preventDefault();
      alter(ev.item.item, { title: ev.target.rename.value });
      ui.update();
    }

    function restore(ev) {
      alter(ev.item.item, { deleted: false });
      arc('deleted');
    }

    function alter(item, obj) {
      let id = Gun.node.soul(item);
      db.get(id).put(obj);
    }
